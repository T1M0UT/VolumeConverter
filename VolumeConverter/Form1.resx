<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>